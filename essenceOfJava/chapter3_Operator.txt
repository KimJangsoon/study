. 연산자(Operator)란?
 - 어떠한 기능을 수행하는 기호(+,-,*,/ 등)

피연산자(Operand)
 - 연산자의 작업 대상(변수, 상수, 리터럴, 수식)

이항연산자의 특징: 이항연산자는 연산을 수행하기 전에 피연산자의 타입을 일치시킨다.
 - int 보다 크기가 작은 타입은 int로 변환한다. (Byte, char, short -> int)
 - 피연산자 중 표현범위가 더 큰 타입으로 형변환한다.
ex) 
    byte c = (byte)a+b;    //에러 
    byte c = (byte)(a+b);  //OK
    
    char c1 = 'a';
    char c2 = c1 + 1;      //에러

쉬프트연산자: <<, >>, >>>
 - 2의 n제곱으로 곱하거나 나눈 결과를 반환한다.
 - 곱셈, 나눗셈보다 빠르다

Ex) 
    X<<n 은 x*2의 n제곱
    X>>n 은 x/2의 n제곱

비트연산자: -  &  |  ^
 - OR연산자(|): 피연산자 중 어는 한 쪽이 1이면 1이다.
 - AND연산자(&): 피연산자 양 쪽 모두 1이면 1이다.
 - XOR연산자(^): 피연산자가 서로 다를 때 1이다.
